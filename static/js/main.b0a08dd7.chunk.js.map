{"version":3,"sources":["components/PhoneBook/Form/InputForm.js","components/PhoneBook/Buttons/BntFormSubmit.js","components/PhoneBook/Form/Form.js","components/PhoneBook/Buttons/BntFormDelete.js","components/PhoneBook/Contacts/ContactListItem.js","components/theme/ThemeContext.js","components/PhoneBook/Contacts/Contacts.js","components/PhoneBook/FindedContact/FindedContact.js","components/PhoneBook/App.js","components/PhoneBook/HOC/theme.js","index.js"],"names":["InputForm","handleChange","config","name","placeholder","minLength","maxLength","type","value","style","width","onChange","BntFormSubmit","initialState","phone","password","gender","Form","state","contactsVerification","clients","client1","some","client","handleSubmit","event","preventDefault","date","Date","toDateString","id","shortID","props","addClientData","setState","target","onSubmit","this","border","inputName","inputPhone","Component","BntFormDelete","onDelComponent","onClick","ContactListItem","className","Context","createContext","themeConfig","light","background","fontColor","dark","ThemeContext","themeToggle","prevState","theme","themeCfg","Provider","children","Consumer","ContactList","console","log","data","onToggleTheme","length","map","key","checked","currentTarget","FindedContact","onfilterClient","filteredClients","withTheme","WrappedComponent","toggle","filter","filterClient","prev","localStorage","setItem","JSON","stringify","delComponent","getItem","parse","toLowerCase","includes","userSelector","color","toggleTheme","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b0a08dd7.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport function InputForm({\r\n  handleChange,\r\n  config: {  name, placeholder, minLength, maxLength, type },\r\n  value,\r\n}) {\r\n  return (\r\n    <>\r\n      <label>\r\n        {name}\r\n        <input\r\n          style={{ width: 280 }}\r\n          name={name}\r\n          placeholder={placeholder}\r\n          minLength={minLength}\r\n          maxLength={maxLength}\r\n          type={type}\r\n          value={value}\r\n          onChange={handleChange}\r\n        />\r\n      </label>\r\n    </>\r\n  );\r\n}","import React from 'react'\r\n \r\nexport const BntFormSubmit = () => (\r\n    <button type=\"submit\">Submit</button>   //не сабмитит\r\n);\r\n    ","import React, { Component } from \"react\";\nimport shortID from \"shortid\";\n\n// import sytles from \"./Phonebook.module.css\";\nimport config from \"../config.json\";\nimport { InputForm } from \"./InputForm\";\nimport { BntFormSubmit } from \"../Buttons/BntFormSubmit\";\n\n// const {} = sytles;\nconst initialState = {\n  name: \"\",\n  phone: \"\",\n  password: \"\",\n  gender: \"\",\n};\n\nexport class Form extends Component {\n  state = { ...initialState };\n\n  contactsVerification = (clients, client1) => {\n    return clients.some((client) => client.name === client1.name);\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const client = {\n      ...this.state,\n      date: new Date().toDateString(),\n      id: shortID(),\n    };\n    if (this.state.name !== \"\" && this.state.phone !== \"\") {\n      if (!this.contactsVerification(this.props.clients, client)) {\n        this.props.addClientData(client);\n      }\n    }\n    // this.resetForm();\n    this.setState(initialState);\n  };\n\n  handleChange = ({ target: { name, value } }) => {\n    this.setState({ [name]: value });\n  };\n\n  // resetForm = () => {\n  //   this.setState(\n  //     {\n  //       name: \"\",\n  //       password: \"\",\n  //       gender: \"\",\n  //       phone: \"\",\n  //     },\n  //     () => console.log(this.state)\n  //   );\n  // };\n\n  render() {\n\n    return (\n      <form\n        onSubmit={this.handleSubmit}\n        style={{ width: 300, border: \"2px dotted white\" }}>\n        <InputForm\n          handleChange={this.handleChange}\n          value={this.state.name}\n          config={config.inputName}/>\n        <InputForm\n          handleChange={this.handleChange}\n          value={this.state.phone}\n          config={config.inputPhone}/>\n        <label>\n          <select\n            name=\"gender\"\n            value={this.state.gender}\n            onChange={this.handleChange}>\n            <option value=\"male\">Male</option>\n            <option value=\"female\">Female</option>\n          </select>\n        </label>\n        <BntFormSubmit />\n      </form>\n    );\n  }\n}\n","import React from \"react\";\r\n\r\nexport const BntFormDelete = ({ client, onDelComponent }) => <button onClick={() => onDelComponent(client.id)}>Delete</button>;\r\n","import React from \"react\";\r\nimport { BntFormDelete } from \"../Buttons/BntFormDelete\";\r\n\r\nexport const ContactListItem = ({ client, onDelComponent }) => (\r\n  <p className=\"clientName\">\r\n    {client.name}: {client.phone}\r\n    <BntFormDelete client={client} onDelComponent={onDelComponent} />\r\n  </p>\r\n);\r\n","// import React from \"react\";\r\n\r\n// export const themeConfig = {\r\n//   light: {\r\n//     background: \"white\",\r\n//     fontColor: \"black\",\r\n//   },\r\n//   dark: {\r\n//     background: \"black\",\r\n//     fontColor: \"white\",\r\n//   },\r\n// };\r\n// export const ThemeContext = React.createContext(themeConfig.dark);\r\n// // console.log('ThemeContext', ThemeContext)\r\n\r\n\r\nimport React, { Component, createContext } from 'react';\r\n\r\nconst Context = createContext();\r\n\r\nexport const themeConfig = {\r\n    light: {\r\n            background: \"white\",\r\n            fontColor: \"black\",\r\n          },\r\n          dark: {\r\n            background: \"black\",\r\n            fontColor: \"white\",\r\n          },\r\n};\r\n\r\nexport default class ThemeContext extends Component {\r\n  static Consumer = Context.Consumer;\r\n\r\n  themeToggle = () => {\r\n    this.setState(prevState => {\r\n      if (prevState.theme === 'dark') {\r\n        return { theme: 'light', themeCfg: themeConfig.light };\r\n      } else {\r\n        return { theme: 'dark', themeCfg: themeConfig.dark };\r\n      }\r\n    });\r\n  };\r\n\r\n  state = {\r\n    theme: 'dark',\r\n    themeCfg: themeConfig.dark,\r\n    themeToggle: this.themeToggle,\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}","import React, { Component } from \"react\";\r\nimport { ContactListItem } from \"./ContactListItem\";\r\nimport { ThemeContext } from \"../../theme/ThemeContext\";\r\n\r\nclass ContactList extends Component {\r\n  state = {};\r\n  render() {\r\n    // ContactList = ({\r\n    //   data: { clients, theme },\r\n    //   onDelComponent,\r\n    //   onToggleTheme,\r\n    // })\r\n    console.log(\"this.props\", this.props);\r\n    const {\r\n      data: { clients, theme },\r\n      onDelComponent,\r\n      onToggleTheme,\r\n    } = this.props;\r\n    // console.log(\"clients\", clients);\r\n    // console.log(\"theme\", theme);\r\n    // return 1\r\n    return clients.length > 0 ? (\r\n      clients.map((client) => (\r\n        // return (clients.map((client) => (\r\n\r\n        <div className=\"contactList\" key={client.id}>\r\n          <label className=\"switch\">\r\n            <input\r\n              type=\"checkbox\"\r\n              // checked={theme.type === \"dark\"}\r\n              checked={theme === \"dark\"}\r\n              onChange={(event) => onToggleTheme(event.currentTarget.value)}\r\n              // onChange={(event) => console.log('event', event)}\r\n              onChange={(event) =>\r\n                console.log(\"event\", event.currentTarget.value)\r\n              }\r\n            />\r\n          </label>\r\n          <ContactListItem client={client} onDelComponent={onDelComponent} />\r\n        </div>\r\n      ))\r\n    ) : (\r\n      <div className=\"contactList\">\r\n        <p>Contacts is not available</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactList;\r\n\r\n// class Contacts extends Component {\r\n//   state = {};\r\n//   render() {\r\n//     const { clients, theme, onToggleTheme, onDelComponent } = this.props;\r\n\r\n//     return (clients.length) ? (\r\n//       clients.map((client) => (\r\n//         // return (clients.map((client) => (\r\n//         <ThemeContext.Consumer>\r\n//           <div className=\"contactList\" key={client.id}>\r\n//             <label className=\"switch\">\r\n//               <input\r\n//                 type=\"checkbox\"\r\n//                 checked={theme.type === \"dark\"}\r\n//                 // checked={theme === \"dark\"}\r\n//                 onChange={(event) => onToggleTheme(event.currentTarget.value)}\r\n//                 // onChange={(event) => console.log('event', event)}\r\n//                 // onChange={(event) => console.log('event', event.currentTarget.value)}\r\n//               />\r\n//             </label>\r\n//             <ContactListItem client={client} onDelComponent={onDelComponent} />\r\n//           </div>\r\n//         </ThemeContext.Consumer>\r\n//       ))\r\n//     ) : (\r\n//       <div className=\"contactList\">\r\n//         <p>Contacts is not available</p>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// export default Contacts;\r\n\r\n// export const ContactList = ({\r\n//   data: { clients, theme },\r\n//   onDelComponent,\r\n//   onToggleTheme,\r\n// }) => {\r\n//   // if (!clients.length) {alert('Enter first name')}/\r\n\r\n//   // console.log('data', theme)\r\n//   return clients.length ? (\r\n//     clients.map((client) => (\r\n//       // return (clients.map((client) => (\r\n//         <ThemeContext.Consumer>\r\n//       <div className=\"contactList\" key={client.id}>\r\n//         <label className=\"switch\">\r\n//           <input\r\n//             type=\"checkbox\"\r\n//             checked={theme.type === \"dark\"}\r\n//             // checked={theme === \"dark\"}\r\n//             onChange={(event) => onToggleTheme(event.currentTarget.value)}\r\n//             // onChange={(event) => console.log('event', event)}\r\n//             // onChange={(event) => console.log('event', event.currentTarget.value)}\r\n//           />\r\n//         </label>\r\n//         <ContactListItem client={client} onDelComponent={onDelComponent} />\r\n//       </div>\r\n//       </ThemeContext.Consumer>\r\n//     ))\r\n//   ) : (\r\n//     <div className=\"contactList\">\r\n//       <p>Contacts is not available</p>\r\n//     </div>\r\n//   );\r\n// };\r\n","import React from \"react\";\r\nimport  ContactList from \"../Contacts/Contacts\";\r\n\r\nexport const FindedContact = ({\r\n  onfilterClient,\r\n  value,\r\n  filteredClients,\r\n  onDelComponent,\r\n}) => {\r\n  // console.log(\"filteredClients\", filteredClients);\r\n  return (\r\n    <>\r\n      <input\r\n        type=\"text\"\r\n        onChange={onfilterClient}\r\n        placeholder={\"Enter name to Saerch...\"}\r\n        value={value}\r\n      />\r\n      <div>\r\n        <ContactList data={{ clients: filteredClients }} \r\n        onDelComponent={onDelComponent}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React, { Component } from \"react\";\nimport { Form } from \"./Form/Form\";\nimport { FindedContact } from \"./FindedContact/FindedContact\";\nimport ContactList from \"./Contacts/Contacts\";\nimport { ThemeContext } from \"../../components/theme/ThemeContext\";\nimport withTheme from \"./HOC/theme\";\n\nconst userSelector = (clients, filter) =>\n  clients.filter((client) =>\n    client.name.toLowerCase().includes(filter.toLowerCase())\n  );\nclass App extends Component {\n  state = {\n    clients: [\n      { id: \"id-1\", name: \"Rosie Simpson\", phone: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", phone: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", phone: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", phone: \"227-91-26\" },\n    ],\n    filter: \"\",\n    theme: \"dark\",\n  };\n  componentDidMount() {\n    this.setState({\n      clients: localStorage.getItem(\"clients\")\n        ? JSON.parse(localStorage.getItem(\"clients\"))\n        : this.state.clients,\n    });\n    // this.toggleTheme()\n  }\n\n  filterClient = ({ target: { value } }) => {\n    this.setState({ filter: value });\n  };\n  addClientData = (client) => {\n    this.setState((prev) => {\n      localStorage.setItem(\n        \"clients\",\n        JSON.stringify([...prev.clients, client])\n      );\n      return { clients: [...prev.clients, client] };\n    });\n  };\n\n  delComponent = (id) => {\n    this.setState((prev) => {\n      localStorage.setItem(\n        \"clients\",\n        JSON.stringify(prev.clients.filter((client) => client.id !== id))\n      );\n      return { clients: prev.clients.filter((client) => client.id !== id) };\n    });\n  };\n\n  render() {\n    const { clients, filter, theme } = this.state;\n    const { toggle, themeCfg } = this.props;\n\n    const filteredClients = userSelector(clients, filter);\n    return (\n      <div\n        style={{ color: themeCfg.fontColor, background: themeCfg.background }}\n      >\n        {/* <ThemeContext.Provider\n          value={{\n            type: this.state.theme,\n            // config: themeConfig[this.state.theme],\n          }}\n        > */}\n        <button onClick={() => toggle()}> switch theme</button>\n\n        <Form addClientData={this.addClientData} clients={clients} />\n        <ContactList\n          data={this.state}\n          onDelComponent={this.delComponent}\n          onToggleTheme={this.toggleTheme}\n        />\n        <FindedContact\n          onfilterClient={this.filterClient}\n          value={filter}\n          filteredClients={filteredClients}\n          onDelComponent={this.delComponent}\n        />\n        {/* <button type=\"button\" onClick={() => {}}>\n          switch theme\n        </button> */}\n        {/* </ThemeContext.Provider> */}\n      </div>\n    );\n  }\n}\n\nexport default withTheme(App);\n","import React from 'react';\r\nimport ThemeContext from '../../theme/ThemeContext';\r\n\r\nconst withTheme = WrappedComponent => {\r\n  return function withTheme(props) {\r\n    return (\r\n      <ThemeContext.Consumer>\r\n        {theme => (\r\n          <WrappedComponent\r\n            {...props}\r\n            themeCfg={theme.themeCfg}\r\n            theme={theme.theme}\r\n            toggle={theme.themeToggle}\r\n          />\r\n        )}\r\n      </ThemeContext.Consumer>\r\n    );\r\n  };\r\n};\r\n\r\nexport default withTheme;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport styles from \"./styles.css\";\nimport App from \"./components/PhoneBook/App\";\nimport ThemeContext from \"./components/theme/ThemeContext\";\n\nReactDOM.render(\n  <ThemeContext>\n    <App />\n  </ThemeContext>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}